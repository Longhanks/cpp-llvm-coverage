name: CI

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Install LLVM 8
      run: |
        sudo apt install build-essential
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo sh -c 'echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main" >> /etc/apt/sources.list'
        sudo apt update
        sudo apt install -y clang-8
    - name: Install cmake
      run: |
        sudo mkdir -p /opt/cmake
        wget https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2-Linux-x86_64.sh -O cmake.sh
        chmod +x cmake.sh
        sudo ./cmake.sh --prefix=/opt/cmake --skip-license
        rm cmake.sh
    - name: Install ninja
      run: |
        wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip
        unzip ninja-linux.zip
        sudo mv ninja /usr/bin/ninja
        rm ninja-linux.zip
    - name: Configure
      run: |
        mkdir build
        cd build
        /opt/cmake/bin/cmake .. -DCMAKE_CXX_COMPILER=clang++-8 -GNinja
    - name: Build
      run: |
        cd build
        ninja coverage-report

  build-macOS:
    runs-on: macOS-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Install cmake
      run: brew install cmake
    - name: Install ninja
      run: brew install ninja
    - name: Install jinja2
      run: pip2 install --user jinja2
    - name: Configure
      run: |
        mkdir build
        cd build
        /usr/local/bin/cmake .. -DCMAKE_CXX_COMPILER=clang++ -GNinja
    - name: Build
      run: |
        cd build
        ninja coverage-report
